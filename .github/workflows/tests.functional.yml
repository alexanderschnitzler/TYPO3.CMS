name: Functional Tests

on: [push]

env:
  REQUIRED_PHP_EXTENSIONS: ""

jobs:
  unit-tests:
    name: "Functional Tests"

    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:5-alpine
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      memcached:
        image: memcached:1.6-alpine
        ports:
          - 11211:11211

#      mysql:
#        image: mysql:5.7
#        env:
#          MYSQL_ALLOW_EMPTY_PASSWORD: false
#          MYSQL_ROOT_PASSWORD: root
#          MYSQL_DATABASE: typo3
##        ports:
##          - 3306:3306
#        options: >-
#          --health-cmd="mysqladmin ping"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        php:
#          - "7.2"
#          - "7.3"
          - "7.4"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          extensions: "${{ env.REQUIRED_PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php }}"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "php-${{ matrix.php }}-composer-${{ matrix.dependencies }}-"

      - name: "Install locked dependencies with composer"
        run: "composer install --no-interaction --no-progress --no-suggest"

      - name: "Start MySQL server"
        run: "sudo systemctl start mysql.service"

      - name: "Run Tests"
        env:
          typo3DatabaseHost: localhost
          typo3DatabasePort: 3306
          typo3DatabaseName: typo3
          typo3DatabaseUsername: root
          typo3DatabasePassword: root
          typo3DatabaseDriver: pdo_mysql
          typo3TestingRedisHost: localhost
          typo3TestingMemcachedHost: localhost
        run: |
          php bin/phpunit \
            --colors \
            --process-isolation \
            --configuration vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTests.xml \
            typo3/sysext/core
